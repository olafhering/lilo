--- cfg.c
+++ cfg.c	2000/03/21 15:33:02
@@ -378,13 +378,13 @@
 }
 
 static int printl_count = 0;
-static void printlabel (char *label)
+static void printlabel (char *label,int defflag)
 {
     int len = strlen (label);
 
     if (!printl_count)
 	prom_printf ("\n");
-    prom_printf ("%s", label);
+    prom_printf ("%s %s",defflag?"*":" ", label);
     while (len++ < 25)
 	prom_putchar (' ');
     printl_count++;
@@ -396,7 +396,9 @@
 {
     struct IMAGES *p;
     char *label, *alias;
-
+    char *ret = cfg_get_strg_i (cf_options, "default");
+    int defflag=0;
+    
     printl_count = 0;
     for (p = images; p; p = p->next) {
 	label = cfg_get_strg_i (p->table, "label");
@@ -406,10 +408,14 @@
 	    if (alias)
 		label = alias + 1;
 	}
+	if(!strcmp(ret,label))
+		defflag=1;
+	else
+		defflag=0;
 	alias = cfg_get_strg_i (p->table, "alias");
-	printlabel (label);
+	printlabel (label,defflag);
 	if (alias)
-	    printlabel (alias);
+	    printlabel (alias,0);
     }
     prom_printf ("\nYou can also type in custom image locations, in the form\n"
 	    "{prom_path;}partno/path_to_image or {prom_path;}{partno}[start-end]\n");
--- yaboot.c
+++ yaboot.c	2000/03/21 15:10:10
@@ -429,6 +429,7 @@
 	    label = imagename;
 	    imagename = p;
 	    defdevice = cfg_get_strg(label, "device");
+	    if(!defdevice) defdevice=bootdevice;
 	    p = cfg_get_strg(label, "partition");
 	    if (p) {
 		n = strtol(p, &endp, 10);
@@ -461,7 +462,7 @@
     	params->kern_dev = NULL;
     }
     if (params->kern_part == -1)
-    	params->kern_part = defpart;
+    	params->kern_part = bootpartition;
     if (!params->kern_dev)
 	params->kern_dev = defdevice;
     if (!params->kern_file)
@@ -472,6 +473,10 @@
     else if (params->kern_file[0] == ',')
 	params->kern_file++;
 
+#if DEBUG
+    prom_printf("kern_dev: %s\nkern_part: %s\nkern_file: %s\n",params->kern_dev,params->kern_part,params->kern_file);
+#endif
+
     if (useconf) {
  	p = cfg_get_strg(label, "initrd");
 	if (p && *p) {
@@ -488,7 +493,7 @@
 	    	params->rd_dev = NULL;
 	    }
 	    if (params->rd_part == -1)
-	    	params->rd_part = defpart;
+	    	params->rd_part = bootpartition;
 	    if (!params->rd_dev)
 		params->rd_dev = defdevice;
 	    if (params->rd_file && params->rd_file[0] == ',')
@@ -505,7 +510,7 @@
  * We also need to add initrd support to this whole mecanism
  */
 void
-yaboot_text_ui(void)
+yaboot_text_ui(char* confpath)
 {
 #define MAX_HEADERS	16
 
@@ -518,7 +523,7 @@
     void*		initrd_base;
     unsigned int	memsize, filesize, offset, initrd_size, load_loc = 0;
     int 		i;
-
+    char fullfile[1024];	/* arbitrary, dunno how large it can get */
     for (;;) {
     	initrd_size = 0;
     	initrd_base = 0;
@@ -529,8 +534,15 @@
 	    continue;
 	
 	prom_printf("Loading kernel...\n");
+	if(confpath)
+		if(!strcmp(confpath,"\\\\"))
+		{
+			fullfile[0]=0;
+			strcat(fullfile,confpath);
+			strcat(fullfile,params.kern_file);
+		}
 	result = open_file(params.kern_dev, params.kern_part,
-		params.kern_file, &file);
+		fullfile, &file);
 	if (result != FILE_ERR_OK) {
 	    prom_printf("\nImage not found.... try again\n");
 	    continue;
@@ -647,8 +659,15 @@
 	 */
 	if (params.rd_file) {
 	    prom_printf("Loading ramdisk...\n");
+	    if(confpath)
+	    	if(!strcmp(confpath,"\\\\"))
+	    	{
+	    		fullfile[0]=0;
+	    		strcat(fullfile,confpath);
+	    		strcat(fullfile,params.rd_file);
+	    	}
 	    result = open_file(params.rd_dev, params.rd_part,
-		params.rd_file, &file);
+		fullfile, &file);
 	    if (result != FILE_ERR_OK)
 		prom_printf("\nRamdisk image not found.\n");
 	    else {
@@ -775,7 +794,7 @@
 		bootdevice, path ? path : NULL, bootpartition);
 #endif	
 	useconf = load_config_file(bootdevice, path, bootpartition);
-	yaboot_text_ui();
+	yaboot_text_ui(path);
 	
 	prom_printf("Bye.\n");
 	return 0;
